{"version":3,"sources":["components/HomePage/HomePage.tsx","components/Navbar/Navbar.tsx","components/NotFoundPage/NotFoundPage.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/Loader/Loader.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Navbar","role","isActive","cn","to","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","sex","name","PeopleTable","people","selectedSlug","findParent","parentName","parent","find","map","personSlug","born","died","motherName","fatherName","Loader","PeoplePage","useState","setPeople","hasErr","setHasErr","isLoading","setIsLoading","useParams","loadPeople","data","useEffect","length","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f37977c1.chunk.js","sourcesContent":["import { FC } from 'react';\n\nexport const HomePage: FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\nimport { FC } from 'react';\n\nexport const Navbar: FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => cn('navbar-item',\n            { 'has-background-grey-lighter': isActive })}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => cn('navbar-item',\n            { 'has-background-grey-lighter': isActive })}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { FC } from 'react';\n\nexport const NotFoundPage: FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: FC<Props> = ({ person }) => (\n  <Link\n    to={`/people/${person.slug}`}\n    className={cn(\n      { 'has-text-danger': person.sex === 'f' },\n    )}\n  >\n    {person.name}\n  </Link>\n);\n","import cn from 'classnames';\nimport { FC } from 'react';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[];\n  selectedSlug: string;\n};\n\nexport const PeopleTable: FC<Props> = ({ people, selectedSlug }) => {\n  const isSelected = (personSlug: string) => selectedSlug === personSlug;\n  const findParent = (parentName: string | null) => {\n    const parent = people.find(person => person.name === parentName);\n\n    if (parent) {\n      return (\n        <PersonLink person={parent} />\n      );\n    }\n\n    return parentName || '-';\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={cn(\n              { 'has-background-warning': isSelected(person.slug) },\n            )}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>{findParent(person.motherName)}</td>\n            <td>{findParent(person.fatherName)}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable';\nimport { Loader } from '../Loader';\n\nexport const PeoplePage: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasErr, setHasErr] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const { slug = '' } = useParams();\n\n  const loadPeople = async () => {\n    try {\n      const data = await getPeople();\n\n      setPeople(data);\n    } catch (error) {\n      setHasErr(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <div className=\"block\">\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"box table-container\">\n        {hasErr && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n        {isLoading && <Loader />}\n        {!isLoading && (\n          people.length\n            ? <PeopleTable people={people} selectedSlug={slug} />\n            : (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            )\n        )}\n      </div>\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\n\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { Navbar } from './components/Navbar';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App: FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}